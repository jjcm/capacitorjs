#home.page-container
  p A client-side, webcomponent based router for lightning fast page navigation. With Capacitor, you send the entire site all at once and let it decide what's shown.
  p Don't believe me when I say it's fast? Try <capacitor-link href="wow">clicking</capacitor-link> some <capacitor-link href="#such-speed">links</capacitor-link>. <capacitor-route test="hash" path="such-speed" style="display: inline;"><span>Neat! It even recognizes hashes!</span></capcitor-route>

  #get-library
    a(href="compiled/capacitor.js") Download
    pre
      code https://capacitor.non.io/capacitor.js
      code 6.1kb

  .block
    h2 How it works
    p If you inspect this page, you'll notice this landing page is contained in a 
    :code(html)
      <capacitor-route path="^$" script="pages/home.js" active>
    p Since the url path matches the path, the route knows to activate itself. Routes that aren't currently active remove themselves from the DOM tree. 
      
  .block
    .quote Wont &lt;a&gt; tags force a page refresh though?
    p Yea toats. That's why we use a happy helper tag for links:
    :code(html)
      <capacitor-link href="wow">Hello, world</capcitor-link>

    .quote I still think you're dumb - you'll have like 8 scripts all trying to run on DOMContentLoaded!
    .columns
      .column
        p Agree with the first part, but as for the second you can add listeners to the <code>routeactivate</code> event. You can also specify a <code>script</code> attribute for the route as a shorthand to bind to a few events:
        :code(html)
          <capacitor-route path=".*" script="hello.js"> 
            <h1>Hello, world</h1> 
          <capcitor-route>
      .column
        :code(javascript)
          ({
            // Runs once as soon as the page loads
            init: () => {
            },

            // Runs every time the route is activated
            onActivate: () => {
              console.log('I was activated!')
            },

            // Runs every time the route is deactivated
            onDeactivate: () => {
              console.log('Apparently the other pages were cooler')
            }
          })
